@model Clinic.Models.EmploiViewModel
<!doctype html>
<html>
<head>

    <meta charset="utf-8" />

    <title>CliniSys</title>


    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <link rel="icon" href="img/favicon.png">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Poppins:200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i&display=swap" rel="stylesheet">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <!-- Nice Select CSS -->
    <link rel="stylesheet" href="~/css/nice-select.css">
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="~/css/font-awesome.min.css">
    <!-- icofont CSS -->
    <link rel="stylesheet" href="~/css/icofont.css">
    <!-- Slicknav -->
    <link rel="stylesheet" href="~/css/slicknav.min.css">
    <!-- Owl Carousel CSS -->
    <link rel="stylesheet" href="~/css/owl-carousel.css">
    <!-- Datepicker CSS -->
    <link rel="stylesheet" href="~/css/datepicker.css">
    <!-- Animate CSS -->
    <link rel="stylesheet" href="~/css/animate.min.css">
    <!-- Magnific Popup CSS -->
    <link rel="stylesheet" href="~/css/magnific-popup.css">
    <!-- Medipro CSS -->

    <link rel="stylesheet" href="~/css/normalize.css">
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/responsive.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }
</style>

</head>
<body>
    <header class="header">
        <div class="header-innner">
            <div class="heading">
                <div class="inner">
                    <div class="row">
                        <!-- Start Logo -->
                        <div class="col">
                            <!-- Start Logo -->
                            <a href="" class="logo">
                                <i class="fa fa-heartbeat" aria-hidden="true"><strong>CliniSys</strong></i>
                            </a>
                            <!-- End Logo -->
                            <!-- Mobile Nav -->
                            <div class="mobile-nav"></div>
                            <!-- End Mobile Nav -->
                        </div>

                        <div class="col">
                            <!-- Main Menu -->
                            <div class="main-menu">
                                <nav class="navigation">
                                    <ul class="nav menu">
                                        <li><a asp-area="" asp-controller="Employe" asp-action="Create">Employée</a></li>
                                        <li><a asp-area="" asp-controller="Poste" asp-action="AddPoste"> Poste</a></li>
                                        <li><a asp-area="" asp-controller="Poste" asp-action="AddRepos">Pause</a></li>
                                        <li><a asp-area="" asp-controller="Home" asp-action="ApproveRegistrationRequests">Approved</a></li>
                                        </ul>
                               </nav>
                            </div>

                        </div>
                        <!--/ End Main Menu -->

                    </div>
                </div>
            </div>
        </div>
        <!--/ End Header Inner -->
    </header>

    <form id="emploi-form" method="post" class="margin">
        <input type="hidden" id="chefServiceId"> <!-- Value will be set dynamically -->
        <input type="hidden" id="serviceId"> <!-- Value will be set dynamically -->
          
        <div class="center">
            <div class="row">
                <div class="date-navigation">
                    <button id="previousWeekBtn" class="btn mx-1"><span class="fas fa-chevron-left"> </span> Semaine Précédente </button>
                    <input type="date" id="date" class="box mx-1" name="DateofWeek" required>
                    <button id="nextWeekBtn" class="btn mx-1"> Semaine Prochaine <span class="fas fa-chevron-right">  </span></button>
                </div>
            </div>
        </div>

            <div class="supllement" id="supplementsSection">
                @if (Model != null && Model.Supplements != null)
                {
                    @foreach (var supplement in Model.Supplements)
                    {
                        <div id="supplement_@supplement.SupplementId" draggable="true" class="supplement">
                            <div class="btn">
                                <strong>@supplement.Nom</strong>
                            </div>
                        </div>
                    }
                }
            </div>

            <div id="modal" class="modal" style="display: none;">
                <div class="modal-content">
                    <div>
                        <span class="close" onclick="closeModal()">&times;</span>
                    </div>
                    <div class="row">
                        <input type="number" class="box" id="matricule" placeholder="Matricule">
                    </div>
                    <div class="row">
                        <div class="col-4">
                            <strong>start</strong>
                            <input type="time" class="box" id="heureDebut" placeholder="Heure de début">
                        </div>
                        <div class="col-4">
                            <strong>fin</strong>
                            <input type="time" class="box" id="heureFin" placeholder="Heure de fin">
                        </div>
                        <div class="col-4">
                            <input type="date" class="box" id="dateJour" placeholder="Date du jour">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 center">
                            <button class="btn" id="valider"> Valider </button>
                        </div>
                    </div>
                </div>
            </div>


        <div class="buttons-container mt-4">

            <div class="form">
                <label for="search">
                    <input class="input" type="text" placeholder="Rechercher" id="search">
                    <div class="fancy-bg"></div>
                    <div class="search">
                        <svg viewBox="0 0 24 24" aria-hidden="true" class="r-14j79pv r-4qtqp9 r-yyyyoo r-1xvli5t r-dnmrzs r-4wgw6l r-f727ji r-bnwqim r-1plcrui r-lrvibr">
                            <g>
                                <path d="M21.53 20.47l-3.66-3.66C19.195 15.24 20 13.214 20 11c0-4.97-4.03-9-9-9s-9 4.03-9 9 4.03 9 9 9c2.215 0 4.24-.804 5.808-2.13l3.66 3.66c.147.146.34.22.53.22s.385-.073.53-.22c.295-.293.295-.767.002-1.06zM3.5 11c0-4.135 3.365-7.5 7.5-7.5s7.5 3.365 7.5 7.5-3.365 7.5-7.5 7.5-7.5-3.365-7.5-7.5z"></path>
                            </g>
                        </svg>
                    </div>
                    <button class="close-btn" type="reset">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                        </svg>
                    </button>
                </label>
            </div>
            <button class="bookmarkBtn" id="myButton" type="submit">
                <span class="IconContainer">
                    <svg viewBox="0 0 384 512" height="0.9em" class="icon">
                        <path d="M0 48V487.7C0 501.1 10.9 512 24.3 512c5 0 9.9-1.5 14-4.4L192 400 345.7 507.6c4.1 2.9 9 4.4 14 4.4c13.4 0 24.3-10.9 24.3-24.3V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48z"></path>
                    </svg>
                </span>
                <p class="textt">Enregistrer</p>
            </button>
            <button class="button" id="clearButton">
                <svg viewBox="0 0 448 512" class="svgIcon"><path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z"></path></svg>
            </button>

            <button class="Btn" id="download-pdf" onclick="downloadPDF(event)">
                <svg class="svgIcon" viewBox="0 0 384 512" height="1em" xmlns="http://www.w3.org/2000/svg">
                    <path d="M169.4 470.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 370.8 224 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 306.7L54.6 265.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"></path>
                </svg>
                <span class="icon2"></span>
                <span class="tooltip">Télécharger</span>
            </button>
            <!-- Bouton pour afficher les emplois -->
            <button type="button" class="btn" id="afficherEmploiButton" onclick="afficherEmploi()">Afficher les emplois</button>



        </div>


        <div class="schedule-table">
            <div class="table-container">
                <table id="tableau" data-days="@string.Join(',', Model.Days.Select(day => day.Dayname))">
                    <thead>
                        <tr>
                            @if (Model.Employees != null)
                            {
                                <th class="employee-column">Employée</th>
                            }
                            @foreach (var day in Model.Days)
                            {
                                @if (day != null && day.Dayname != null)
                                {
                                    <th>@day.Dayname</th>
                                }
                            }
                            <th>Heures totales</th>
                        </tr>
                    </thead>
                    <tbody>
                       
                    </tbody>

                </table>

            </div>



            <div class="extra-boxes">

                <select class="btn-categories" id="categorieDropdown" name="CategorieId" title="Sélectionnez une catégorie" required>
                    <option value="">Sélectionnez une catégorie</option>
                    @if (Model != null && Model.Categories != null)
                    {
                        @foreach (var categorie in Model.Categories)
                        {
                            <option value="@categorie.CategorieId">@categorie.CategorieName</option>
                        }
                    }
                </select>
                <div id="postesSection">
                    @if (Model != null && Model.Postes != null)
                    {
                        @foreach (var poste in Model.Postes)
                        {

                            <div class="position" draggable="true">
                            </div>


                        }
                    }
                </div>
            </div>

        </div>
        <div id="reposSection">

            @if (Model != null && Model.Repos != null)
            {
                @foreach (var repos in Model.Repos)
                {

                    <div class="repos" id="repos_@repos.ReposId" draggable="true">
                    </div>
                }
            }
        </div>




        <input type="hidden" id="emploiData" name="emploiData" />


    </form>   <!-- Preloader -->


    <footer id="contact" class="footer">
        <!-- Haut du footer -->
        <div class="footer-top">
            <div class="content">
                <div class="row">
                    <div class="col">
                        <div class="single-footer">
                            <h2>Suivez-nous</h2>
                            <ul class="social">
                                <li><a href="#"><i class="icofont-facebook"></i></a></li>
                                <li><a href="#"><i class="icofont-google-plus"></i></a></li>
                                <li><a href="#"><i class="icofont-twitter"></i></a></li>
                                <li><a href="#"><i class="icofont-vimeo"></i></a></li>
                            </ul>
                            <!-- Réseaux sociaux -->
                        </div>
                    </div>
                    <div class="col">
                        <div class="single-footer f-link">
                            <h2>Liens rapides</h2>
                            <div class="row">
                                <div class="col">
                                    <ul>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Accueil</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>À propos de nous</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Nos services</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Nos cas</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Autres liens</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="single-footer f-link">
                            <h2>Nos services</h2>
                            <div class="row">
                                <div class="col">
                                    <ul>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Soins dentaires</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Thérapie par massage</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Cardiologie</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Diagnostic</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Services d'ambulance</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="single-footer f-link">
                            <h2>Contact</h2>
                            <div class="row">
                                <div class="col">
                                    <ul>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i> 123 Rue de la Santé</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Sfax, Tunisie</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>info@clinique.com</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>+216 22 24 25 26 </a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--/ Fin du haut du footer -->
        <!-- Contact -->
        <!--/ Fin du Contact -->
    </footer>

    <!--/ End Footer Area -->
    <!-- jquery Min JS -->
    <!-- jquery Migrate JS -->
    <!-- jquery Ui JS -->
    <!-- Easing JS -->
    <!-- Other scripts -->
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.6/jspdf.plugin.autotable.min.js"></script>
    <script>

        document.addEventListener("DOMContentLoaded", function () {
            const previousWeekBtn = document.getElementById('previousWeekBtn');
            const nextWeekBtn = document.getElementById('nextWeekBtn');
            const dateInput = document.getElementById('date');

            previousWeekBtn.addEventListener('click', function () {
                changeDate(-7); // Décrémente de 7 jours pour aller à la semaine précédente
            });

            nextWeekBtn.addEventListener('click', function () {
                changeDate(7); // Incrémente de 7 jours pour aller à la semaine suivante
            });

            function changeDate(offset) {
                const currentDate = new Date(dateInput.value);
                if (isNaN(currentDate.getTime())) {
                    alert('Veuillez sélectionner une date valide.');
                    return;
                }
                const newDate = new Date(currentDate.getTime() + (offset * 24 * 60 * 60 * 1000));
                dateInput.value = newDate.toISOString().split('T')[0]; // Met à jour la valeur de l'input avec la nouvelle date
                afficherEmploi(); // Appeler la fonction afficherEmploi pour mettre à jour l'affichage
            }
        });

        document.addEventListener("DOMContentLoaded", function () {
            // Retrieve the employeeId and serviceId from sessionStorage
            var employeeId = sessionStorage.getItem("employeeId");
            var serviceId = sessionStorage.getItem("serviceId");

            // Log the values to the console
            console.log("Chef de Service ID:", employeeId);
            console.log("Service ID:", serviceId);

            // AJAX request to get employees and days
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetEmployees", "Emploi")", // Remplacez par votre nom de contrôleur
                success: function (response) {
                    // Filtrer les employés par serviceId
                    var filteredEmployees = response.employees.filter(employee => employee.serviceId == serviceId);

                    // Récupérer l'élément tbody du tableau
                    var tbody = document.querySelector("#tableau tbody");

                    // Vider le contenu actuel du tbody
                    tbody.innerHTML = "";

                    // Ajouter dynamiquement les en-têtes de jours
                    var thead = document.querySelector("#tableau thead tr");
                    // Supprimer les anciens en-têtes de jour
                    while (thead.childNodes.length > 2) {
                        thead.removeChild(thead.childNodes[1]);
                    }
                    response.days.forEach(day => {
                        var dayHeader = document.createElement("th");
                        dayHeader.textContent = day.dayname;
                        thead.insertBefore(dayHeader, thead.lastElementChild);
                    });

                    // Ajouter le <th> pour le nom de l'employé
                    var employeeNameHeader = document.createElement("th");
                    employeeNameHeader.textContent = "Employee Name";
                    thead.insertBefore(employeeNameHeader, thead.childNodes[1]);

                    // Ajouter le <th> pour les heures totales
                    var totalHoursHeader = document.createElement("th");
                    totalHoursHeader.className = "TotalHours-column";
                    totalHoursHeader.textContent = "Total Weekly Hours";
                    totalHoursHeader.setAttribute("title", "Total Weekly Hours");
                    thead.appendChild(totalHoursHeader);

                    // Ajouter les employés filtrés au tableau
                    filteredEmployees.forEach(employee => {
                        var row = document.createElement("tr");
                        row.id = employee.employeeId;

                        // Ajouter la cellule de l'employé
                        var employeeCell = document.createElement("td");
                        employeeCell.textContent = employee.name;
                        row.appendChild(employeeCell);

                        // Ajouter les cellules pour les jours
                        response.days.forEach(day => {
                            var cellId = `${employee.employeeId}-${day.dayname}`;
                            var dayCell = document.createElement("td");
                            dayCell.id = cellId;
                            dayCell.className = "droppable " + day.dayname.toLowerCase();
                            dayCell.setAttribute("ondrop", "drop(event)");
                            dayCell.setAttribute("ondragover", "allowDrop(event)");
                            dayCell.dataset.employee = employee.employeeId;
                            dayCell.dataset.day = day.dayname;

                            row.appendChild(dayCell);
                        });

                        // Ajouter la cellule des heures totales
                        var totalHoursCell = document.createElement("td");
                        totalHoursCell.className = "TotalHours-column";
                        totalHoursCell.textContent = employee.totalWeeklyHours || 0;
                        totalHoursCell.setAttribute("title", "Total Weekly Hours"); // Ajouter un titre
                        row.appendChild(totalHoursCell);

                        // Ajouter la ligne au tableau
                        tbody.appendChild(row);
                    });
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.error("Error:", textStatus, errorThrown);
                    alert("An error occurred while processing your request.");
                }
            });
        });





        var draggedItem;
         var categorieId = $("#categorieDropdown").val();
            var dateSelected = $("#date").val();
        // Définition des fonctions de glisser-déposer
        function allowDrop(event) {
            event.preventDefault(); // Empêcher le comportement par défaut
        }


        function dragStart(e) {
            draggedItem = this.cloneNode(true);
            draggedItem.classList.add('dragged');
            this.style.opacity = '0';
            e.dataTransfer.setData('text/plain', '');
            document.body.appendChild(draggedItem);
        }

        function dragEnd() {
            this.style.opacity = '1';
            draggedItem.remove();
        }

        function dragOver(e) {
            e.preventDefault();
        }

        function dragEnter(e) {
            e.preventDefault();
            this.classList.add('hovered');
        }

        function dragLeave() {
            if (this) {
                this.classList.remove('hovered');
            }
        }
        function drop(e) {
            e.preventDefault();
            this.classList.remove('hovered');
            if (draggedItem) {
                var clonedItem = draggedItem.cloneNode(true);
                this.appendChild(clonedItem);
            }
        }
        function clearCell() {
            if (this.innerHTML.trim() !== '') {
                this.innerHTML = '';
            }
        }

        function dragEnd() {
            this.style.opacity = '1';
            draggedItem.remove();
        }

        // Attachement des événements de glisser-déposer aux éléments nécessaires après la sélection de la catégorie
        function attachDragDropEvents() {
            const positions = document.querySelectorAll('.position');
            const repos = document.querySelectorAll('.repos');
            const cells = document.querySelectorAll('.droppable');
            const supplements = document.querySelectorAll('.supplement');

            positions.forEach(position => {
                position.addEventListener('dragstart', dragStart);
                position.addEventListener('dragend', dragEnd);
            });

            repos.forEach(repo => {
                repo.addEventListener('dragstart', dragStart);
                repo.addEventListener('dragend', dragEnd);
            });

            cells.forEach(cell => {
                cell.addEventListener('dragover', dragOver);
                cell.addEventListener('dragenter', dragEnter);
                cell.addEventListener('dragleave', dragLeave);
                cell.addEventListener('drop', drop);
                cell.addEventListener('click', clearCell);
            });

            supplements.forEach(supplement => {
                supplement.addEventListener('dragstart', dragStart);
                supplement.addEventListener('dragend', dragEnd);
            });
        }

        // Gestionnaire d'événements pour le changement de catégorie
        $('#categorieDropdown').change(updateDraggableElements);

        // Appel initial pour attacher les événements de glisser-déposer aux éléments existants
        attachDragDropEvents();


        document.addEventListener('DOMContentLoaded', function () {
            // Ajoute un gestionnaire d'événements au clic sur le bouton

            const clearButton = document.getElementById('clearButton');
            clearButton.addEventListener('click', clearTable);

            function clearTable() {
                const cells = document.querySelectorAll('.droppable');
                cells.forEach(cell => {
                    cell.innerHTML = '';
                });

                // Réinitialiser les totaux hebdomadaires
                const totalWeeklyHoursCells = document.querySelectorAll('.total-weekly-hours');
                totalWeeklyHoursCells.forEach(cell => {
                    cell.querySelector('.dynamic-hours').textContent = '0';
                });
            }
        });
        function initDraggableElements() {
            $(".element").draggable({
                containment: "parent",
                stop: function (event, ui) {
                    $(this).data("posX", ui.position.left);
                    $(this).data("posY", ui.position.top);
                },
            });
        }

        //==========================>  UPDATE DE CATEGORIE <===========================================//
        document.addEventListener('DOMContentLoaded', (event) => {
            // Attach click event listeners to supplements on initial load
            attachSupplementClickEvents();
        });

        // Function to attach click event listeners to supplements
        function attachSupplementClickEvents() {
            document.querySelectorAll('.supplement').forEach(supplementDiv => {
                supplementDiv.addEventListener('click', function () {
                    showModal();
                });
            });
        }

        // Function to show the modal
        function showModal() {
            var modal = document.getElementById('modal');
            modal.style.display = 'block';
        }

        // Function to close the modal
        function closeModal() {
            var modal = document.getElementById('modal');
            modal.style.display = 'none';
        }

        var categorieDropdown = document.getElementById("categorieDropdown");
        categorieDropdown.addEventListener('change', updateDraggableElements);

        function updateDraggableElements() {
            var categorieId = document.getElementById('categorieDropdown').value;
            if (categorieId) {
                // Fetch des données de la catégorie sélectionnée
                fetch('/Emploi/GetPostesReposAndSupplementsByCategorie?CategorieId=' + categorieId)
                    .then(response => response.json())
                    .then(data => {
                        // Efface les sections de postes, repos et suppléments
                        var postesSection = document.getElementById("postesSection");
                        postesSection.innerHTML = '';

                        var reposSection = document.getElementById("reposSection");
                        reposSection.innerHTML = '';

                        var supplementsSection = document.getElementById("supplementsSection");
                        supplementsSection.innerHTML = '';

                        // Traite les données reçues
                        if (data.success) {
                            // Afficher les postes
                            if (data.postes && data.postes.length > 0) {
                                data.postes.forEach(poste => {
                                    var posteDiv = document.createElement('div');
                                    posteDiv.className = "position";
                                    posteDiv.draggable = "true";
                                    posteDiv.id = poste.posteId;

                                    var posteContent = `<div class="box holiday-box">
                                            <strong>${poste.postename}</strong><br />`;

                                    if (poste.matin) {
                                        posteContent += ' Matin  ';
                                    }

                                    if (poste.apresMidi) {
                                        posteContent += ' Après-midi  ';
                                    }

                                    if (poste.gardeSoir) {
                                        posteContent += ' Garde Soir';
                                    }
                                    posteContent += `<br />
                                            S1 : <span>${poste.seance1Debut} /</span>
                                            <span>${poste.seance1Fin}</span><br />`;

                                    if (poste.seance2Debut) {
                                        posteContent += `<span>${poste.seance2Debut} /</span>`;
                                    }

                                    if (poste.seance2Fin) {
                                        posteContent += `  S2 :<span>${poste.seance2Fin}</span>`;
                                    }

                                    posteContent += `</div>`;

                                    posteDiv.innerHTML = posteContent;
                                    postesSection.appendChild(posteDiv);
                                });
                            }

                            // Afficher les repos
                            if (data.repos && data.repos.length > 0) {
                                data.repos.forEach(repo => {
                                    var repoDiv = document.createElement('div');
                                    repoDiv.className = "repos";
                                    repoDiv.draggable = "true";
                                    repoDiv.id = repo.reposId;

                                    var dateJoursContent = repo.date_Jours ? `<span> ${repo.date_Jours}</span>` : '';

                                    repoDiv.innerHTML = `<div class="box repo-box">
                                            <strong>${repo.reposName}</strong><br />
                                            ${dateJoursContent}
                                        </div>`;

                                    reposSection.appendChild(repoDiv);
                                });
                            }

                            // Afficher les suppléments
                            if (data.supplements && data.supplements.length > 0) {
                                data.supplements.forEach(supplement => {
                                    var supplementDiv = document.createElement('div');
                                    supplementDiv.className = "supplement";
                                    supplementDiv.draggable = "true";
                                    supplementDiv.id = 'supplement_' + supplement.supplementId;

                                    supplementDiv.innerHTML = `<div class="btn">
                                            <strong>${supplement.nom}</strong>
                                        </div>`;

                                    supplementsSection.appendChild(supplementDiv);
                                });

                                // Attach click event listeners to the new supplements
                                attachSupplementClickEvents();
                            }
                        } else {
                            console.error('Erreur lors de la récupération des données: ', data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Erreur lors de la récupération des postes, repos et suppléments:', error);
                    });
            } else {
                var postesSection = document.getElementById("postesSection");
                postesSection.innerHTML = '';

                var reposSection = document.getElementById("reposSection");
                reposSection.innerHTML = '';

                var supplementsSection = document.getElementById("supplementsSection");
                supplementsSection.innerHTML = '';
            }
        }


        //==========================>  PDF <===========================================//
        function downloadPDF(event) {
            event.stopPropagation();
            const doc = new jsPDF();
            const table = document.getElementById("tableau");
            doc.autoTable({ html: table });
            doc.save("tableau.pdf");
        }
        //==========================>  CALENDRER<===========================================//
        flatpickr.l10ns.default.firstDayOfWeek = 1; // Définit le premier jour de la semaine à lundi
        flatpickr.localize(flatpickr.l10ns.default); // Définit la locale par défaut

        flatpickr("#date", {
            dateFormat: "Y-m-d", // Format de date, si nécessaire
            disable: [
                function (date) {
                    // Désactiver tous les jours sauf les samedis
                    return date.getDay() !== 6;
                }
            ]
        });

    function checkSaturday(selectedDate) {
            var date = new Date(selectedDate);
            var dayOfWeek = date.getDay();

            // Vérifie si le jour sélectionné est un samedi (6 pour samedi)
            if (dayOfWeek !== 6) {
                alert("Veuillez sélectionner un samedi.");
                document.getElementById('date').value = ''; // Réinitialise la valeur de l'input
            }
        }

        //==========================> AFFICHAGE DU L'EMPLOI <===========================================//

        function afficherEmploi() {
            var categorieId = $("#categorieDropdown").val();
            var dateSelected = $("#date").val();
            var serviceId = sessionStorage.getItem("serviceId");

            console.log("Service ID :", serviceId);
            console.log("Catégorie ID :", categorieId);
            console.log("Date sélectionnée :", dateSelected);

            $.ajax({
                url: '/Emploi/GetEmploiByServiceCategorieAndDate',
                type: 'GET',
                data: { serviceId: serviceId, categorieId: categorieId, dateSelected: dateSelected },
                success: function (response) {
                    if (response.success) {
                        $.each(response.data, function (index, emploi) {
                            var employeeId = emploi.employeeId;
                            var dayName = emploi.dayName;
                            var cellId = `${employeeId}-${dayName}`;
                            var cellContent = '';
                            var cell = $("#tableau").find("tr#" + employeeId + " td[data-day='" + dayName + "']");

                            if (emploi.posteId) {
                                cellContent += emploi.posteName + '<br>';
                            }

                            if (emploi.reposId) {
                                cellContent += emploi.reposName + '<br>';
                            }

                            if (emploi.supplementId) {
                                cellContent += emploi.supplementName + '<br>';
                            }

                            cell.html(cellContent);
                        });
                    } else {
                        alert("Aucun emploi trouvé pour les critères sélectionnés.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Une erreur s'est produite lors de la récupération des données d'emploi :", error);
                }
            });
        }
        


       //==========================> ENREGISTREMENT DU L'EMPLOI <===========================================//
        function getTableData() {
            var emploiData = [];
            $("#tableau tbody tr").each(function () {
                var employeeId = $(this).attr("id");
                var name = $(this).closest("tr").find(".employee-column").text().trim();

                $(this).find("td.droppable").each(function (index, cell) {
                    var dayName = $(this).data("day");

                    var posteId = $(cell).find(".position").attr("id") || "";
                    var reposId = $(cell).find(".repos").attr("id") || "";
                    var supplementId = $(cell).find(".supplement").attr("id") || "";

                    var dailyEmployment = {
                        EmployeeId: employeeId,
                        EmployeName: name,
                        DayName: dayName,
                        PosteId: posteId,
                        ReposId: reposId,
                        SupplementId: supplementId
                    };

                    emploiData.push(dailyEmployment);
                });
            });
            return emploiData;
        }


        $("#emploi-form").submit(function (event) {
        event.preventDefault(); // Empêche la soumission du formulaire par défaut

        // Récupérer les données du tableau
        var emploiData = getTableData();
            var serviceId = sessionStorage.getItem("serviceId");

        // Construction de l'objet à envoyer au serveur
        var dataToSend = {
                ServiceSelected: serviceId,
            DateSelected: $("#date").val(),
            CategorieSelected: $("#categorieDropdown").val(),
            EmploiData: emploiData
        };

        console.log("Données d'emploi à envoyer au serveur :", dataToSend); // Affiche les données à envoyer dans la console

        // Envoi des données au serveur via $.post()
        $.ajax({
            url: '@Url.Action("EnregistrerEmploi", "Emploi")',
            type: 'POST',
            contentType: 'application/json', // Spécifie le type de contenu comme JSON
            data: JSON.stringify(dataToSend), // Convertit les données en JSON
            success: function (result) {
                console.log("Résultat :", result);
                // Gérer le résultat si nécessaire
                alert(result.message); // Affichez un message d'alerte avec le message reçu du serveur
            },
            error: function (xhr, status, error) {
                console.error("Erreur lors de l'envoi des données :", error);
                alert("Erreur lors de l'envoi des données. Consultez la console pour plus de détails.");
                // Gérer l'erreur si nécessaire
            }
        });
        });

    </script>
</body>
</html>


