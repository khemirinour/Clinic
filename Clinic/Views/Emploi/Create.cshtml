@model Clinic.Models.EmploiViewModel
<!doctype html>
<html>
<head>

    <meta charset="utf-8" />

    <title>CliniSys</title>


    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <link rel="icon" href="img/favicon.png">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Poppins:200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i&display=swap" rel="stylesheet">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <!-- Nice Select CSS -->
    <link rel="stylesheet" href="~/css/nice-select.css">
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="~/css/font-awesome.min.css">
    <!-- icofont CSS -->
    <link rel="stylesheet" href="~/css/icofont.css">
    <!-- Slicknav -->
    <link rel="stylesheet" href="~/css/slicknav.min.css">
    <!-- Owl Carousel CSS -->
    <link rel="stylesheet" href="~/css/owl-carousel.css">
    <!-- Datepicker CSS -->
    <link rel="stylesheet" href="~/css/datepicker.css">
    <!-- Animate CSS -->
    <link rel="stylesheet" href="~/css/animate.min.css">
    <!-- Magnific Popup CSS -->
    <link rel="stylesheet" href="~/css/magnific-popup.css">
    <!-- Medipro CSS -->

    <link rel="stylesheet" href="~/css/normalize.css">
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/responsive.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

</head>
<body>
    <header class="header">
        <div class="header-innner">
            <div class="heading">
                <div class="inner">
                    <div class="row">
                        <!-- Start Logo -->
                        <div class="col">
                            <!-- Start Logo -->
                            <a href="" class="logo">
                                <i class="fa fa-heartbeat" aria-hidden="true"><strong>CliniSys</strong></i>
                            </a>
                            <!-- End Logo -->
                            <!-- Mobile Nav -->
                            <div class="mobile-nav"></div>
                            <!-- End Mobile Nav -->
                        </div>

                        <div class="col">
                            <!-- Main Menu -->
                            <div class="main-menu">
                                <nav class="navigation">
                                    <ul class="nav menu">
                                        <li><a asp-area="" asp-controller="Employe" asp-action="Create">Employée</a></li>
                                        <li><a asp-area="" asp-controller="Poste" asp-action="AddPoste"> Poste</a></li>
                                        <li><a asp-area="" asp-controller="Poste" asp-action="AddRepos">Pause</a></li>
                                        <li><a asp-area="" asp-controller="Poste" asp-action="AddSupplement">Heures Supplémentaire</a></li>
                                        <li>
                                             <select class="btn-service" id="serviceDropdown" name="ServiceId" onchange="updateEmployees()" required>
                                            <option value="">
                                            Service
                                            </option>
                                            @if (Model != null && Model.Services != null)
                                            {
                                            @foreach (var service in Model.Services)
                                            {
                                            <option value="@service.Id">@service.Name</option>
                                            }
                                            }
                                            </select>
                                        </li>
                                    </ul>

                                </nav>
                            </div>

                        </div>
                        <!--/ End Main Menu -->

                    </div>
                </div>
            </div>
        </div>
        <!--/ End Header Inner -->
    </header>

    <form id="emploi-form" method="post" class="margin">
        @*         <div class="text">
        <h4>Planificateur Clinique</h4>
        </div> *@
        <div class="center">
            <div class="row">
                <div class="date-navigation">
                    <button id="previousWeekBtn" class="btn mx-1"><span class="fas fa-chevron-left"> </span> Semaine Précédente </button>
                    <input type="date" id="date" class="box mx-1" name="DateofWeek" required>
                    <button id="nextWeekBtn" class="btn mx-1"> Semaine Prochaine <span class="fas fa-chevron-right">  </span></button>
                </div>
            </div>

        </div>
        <div class="supllement" id="supplementsSection">
            @if (Model != null && Model.Supplements != null)
            {
                @foreach (var supplement in Model.Supplements)
                {
                    <div id="supplement_@supplement.SupplementId" draggable="true">
                    </div>
                }
            }
        </div>

        <div class="buttons-container mt-4">

            <div class="form">
                <label for="search">
                    <input class="input" type="text" placeholder="Rechercher" id="search">
                    <div class="fancy-bg"></div>
                    <div class="search">
                        <svg viewBox="0 0 24 24" aria-hidden="true" class="r-14j79pv r-4qtqp9 r-yyyyoo r-1xvli5t r-dnmrzs r-4wgw6l r-f727ji r-bnwqim r-1plcrui r-lrvibr">
                            <g>
                                <path d="M21.53 20.47l-3.66-3.66C19.195 15.24 20 13.214 20 11c0-4.97-4.03-9-9-9s-9 4.03-9 9 4.03 9 9 9c2.215 0 4.24-.804 5.808-2.13l3.66 3.66c.147.146.34.22.53.22s.385-.073.53-.22c.295-.293.295-.767.002-1.06zM3.5 11c0-4.135 3.365-7.5 7.5-7.5s7.5 3.365 7.5 7.5-3.365 7.5-7.5 7.5-7.5-3.365-7.5-7.5z"></path>
                            </g>
                        </svg>
                    </div>
                    <button class="close-btn" type="reset">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                        </svg>
                    </button>
                </label>
            </div>
            <button class="bookmarkBtn" id="myButton" type="submit">
                <span class="IconContainer">
                    <svg viewBox="0 0 384 512" height="0.9em" class="icon">
                        <path d="M0 48V487.7C0 501.1 10.9 512 24.3 512c5 0 9.9-1.5 14-4.4L192 400 345.7 507.6c4.1 2.9 9 4.4 14 4.4c13.4 0 24.3-10.9 24.3-24.3V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48z"></path>
                    </svg>
                </span>
                <p class="textt">Enregistrer</p>
            </button>
            <button class="button" id="clearButton">
                <svg viewBox="0 0 448 512" class="svgIcon"><path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z"></path></svg>
            </button>

            <button class="Btn" id="download-pdf" onclick="downloadPDF(event)">
                <svg class="svgIcon" viewBox="0 0 384 512" height="1em" xmlns="http://www.w3.org/2000/svg">
                    <path d="M169.4 470.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 370.8 224 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 306.7L54.6 265.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"></path>
                </svg>
                <span class="icon2"></span>
                <span class="tooltip">Télécharger</span>
            </button>
            <!-- Bouton pour afficher les emplois -->
            <button type="button" class="btn" id="afficherEmploiButton" onclick="afficherEmploi()">Afficher les emplois</button>



        </div>



        <div class="schedule-table">
            <div class="table-container">
                <table id="tableau" data-days="@string.Join(',', Model.Days.Select(day => day.Dayname))">
                    <thead>
                        <tr>
                            @if (Model.Employees != null)
                            {
                                <th class="employee-column">Employée</th>
                            }
                            @foreach (var day in Model.Days)
                            {
                                @if (day != null && day.Dayname != null)
                                {
                                    <th>@day.Dayname</th>
                                }
                            }
                            <th>Heures totales</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Employees != null)
                        {
                            @foreach (var employee in Model.Employees)
                            {
                                <tr id="@employee.EmployeeId">
                                    <td class="employee-column">@employee.Name</td>
                                    @if (Model.Days != null)
                                    {
                                        @foreach (var day in Model.Days)
                                        {
                                            @if (day != null && day.Dayname != null)
                                            {
                                                var cellId = $"{employee.EmployeeId}-{day.Dayname}";


                                                <td id="@cellId" class="droppable" ondrop="drop(event)" ondragover="allowDrop(event)" data-employee="@employee.EmployeeId" data-day="@day.Dayname">
                                                </td>
                                            }
                                        }
                                    }

                                    <td class="TotalHours-column">@employee.TotalWeeklyHours</td>
                                </tr>
                            }
                        }
                    </tbody>

                </table>

            </div>
            <div class="extra-boxes">

                <select class="btn-categories" id="categorieDropdown" name="CategorieId" title="Sélectionnez une catégorie" required>
                    <option value="">Sélectionnez une catégorie</option>
                    @if (Model != null && Model.Categories != null)
                    {
                        @foreach (var categorie in Model.Categories)
                        {
                            <option value="@categorie.CategorieId">@categorie.CategorieName</option>
                        }
                    }
                </select>
                <div id="postesSection">
                    @if (Model != null && Model.Postes != null)
                    {
                        @foreach (var poste in Model.Postes)
                        {

                            <div class="position" draggable="true">
                            </div>


                        }
                    }
                </div>
            </div>

        </div>
        <div id="reposSection">

            @if (Model != null && Model.Repos != null)
            {
                @foreach (var repos in Model.Repos)
                {

                    <div class="repos" id="repos_@repos.ReposId" draggable="true">
                    </div>
                }
            }
        </div>




        <input type="hidden" id="emploiData" name="emploiData" />


    </form>   <!-- Preloader -->


    <footer id="contact" class="footer">
        <!-- Haut du footer -->
        <div class="footer-top">
            <div class="content">
                <div class="row">
                    <div class="col">
                        <div class="single-footer">
                            <h2>Suivez-nous</h2>
                            <ul class="social">
                                <li><a href="#"><i class="icofont-facebook"></i></a></li>
                                <li><a href="#"><i class="icofont-google-plus"></i></a></li>
                                <li><a href="#"><i class="icofont-twitter"></i></a></li>
                                <li><a href="#"><i class="icofont-vimeo"></i></a></li>
                            </ul>
                            <!-- Réseaux sociaux -->
                        </div>
                    </div>
                    <div class="col">
                        <div class="single-footer f-link">
                            <h2>Liens rapides</h2>
                            <div class="row">
                                <div class="col">
                                    <ul>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Accueil</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>À propos de nous</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Nos services</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Nos cas</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Autres liens</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="single-footer f-link">
                            <h2>Nos services</h2>
                            <div class="row">
                                <div class="col">
                                    <ul>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Soins dentaires</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Thérapie par massage</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Cardiologie</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Diagnostic</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Services d'ambulance</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="single-footer f-link">
                            <h2>Contact</h2>
                            <div class="row">
                                <div class="col">
                                    <ul>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i> 123 Rue de la Santé</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>Sfax, Tunisie</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>info@clinique.com</a></li>
                                        <li><a href="#"><i class="fa fa-caret-right" aria-hidden="true"></i>+216 22 24 25 26 </a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--/ Fin du haut du footer -->
        <!-- Contact -->
        <!--/ Fin du Contact -->
    </footer>

    <!--/ End Footer Area -->
    <!-- jquery Min JS -->
    <!-- jquery Migrate JS -->
    <!-- jquery Ui JS -->
    <!-- Easing JS -->
    <!-- Other scripts -->
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.6/jspdf.plugin.autotable.min.js"></script>
    <script>


        function downloadPDF(event) {
            event.stopPropagation();
            const doc = new jsPDF();
            const table = document.getElementById("tableau");
            doc.autoTable({ html: table });
            doc.save("tableau.pdf");
        }

        flatpickr.l10ns.default.firstDayOfWeek = 1; // Définit le premier jour de la semaine à lundi
        flatpickr.localize(flatpickr.l10ns.default); // Définit la locale par défaut

        flatpickr("#date", {
            dateFormat: "Y-m-d", // Format de date, si nécessaire
            disable: [
                function (date) {
                    // Désactiver tous les jours sauf les samedis
                    return date.getDay() !== 6;
                }
            ]
        });

        function afficherEmploi() {
            var serviceId = $("#serviceDropdown").val();
            var categorieId = $("#categorieDropdown").val();
            var dateSelected = $("#date").val();

            console.log("Service ID :", serviceId);
            console.log("Catégorie ID :", categorieId);
            console.log("Date sélectionnée :", dateSelected);

            $.ajax({
                url: '/Emploi/GetEmploiByServiceCategorieAndDate',
                type: 'GET',
                data: { serviceId: serviceId, categorieId: categorieId, dateSelected: dateSelected },
                success: function (response) {

                    if (response.success) {
                        $.each(response.data, function (index, emploi) {
                            var employeeId = emploi.employeeId;
                            var dayName = emploi.dayName;
                            var cellId = `${employeeId}-${dayName}`; // Formatage de l'ID de la cellule
                            var cellContent = '';
                            var cell = $("#tableau").find("tr#" + employeeId + " td[data-day='" + dayName + "']");

                            if (emploi.posteId) {
                                cellContent += emploi.posteName + '<br>';
                            }

                            if (emploi.reposId) {
                                cellContent += emploi.reposName + '<br>';
                            }

                            if (emploi.supplementId) {
                                cellContent += emploi.supplementName + '<br>';
                            }

                            cell.html(cellContent);

                        });
                    } else {
                        alert("Aucun emploi trouvé pour les critères sélectionnés.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Une erreur s'est produite lors de la récupération des données d'emploi :", error);
                }
            });
        }




        var categorieId = $("#categorieDropdown").val();
        var dateSelected = $("#date").val();


        function checkSaturday(selectedDate) {
            var date = new Date(selectedDate);
            var dayOfWeek = date.getDay();

            // Vérifie si le jour sélectionné est un samedi (6 pour samedi)
            if (dayOfWeek !== 6) {
                alert("Veuillez sélectionner un samedi.");
                document.getElementById('date').value = ''; // Réinitialise la valeur de l'input
            }
        }



        document.addEventListener('DOMContentLoaded', function () {
            // Ajoute un gestionnaire d'événements au clic sur le bouton

            const clearButton = document.getElementById('clearButton');
            clearButton.addEventListener('click', clearTable);

            function clearTable() {
                const cells = document.querySelectorAll('.droppable');
                cells.forEach(cell => {
                    cell.innerHTML = '';
                });

                // Réinitialiser les totaux hebdomadaires
                const totalWeeklyHoursCells = document.querySelectorAll('.total-weekly-hours');
                totalWeeklyHoursCells.forEach(cell => {
                    cell.querySelector('.dynamic-hours').textContent = '0';
                });
            }
        });

        var draggedItem;

        function dragStart(e) {
            draggedItem = this.cloneNode(true);
            draggedItem.classList.add('dragged');
            this.style.opacity = '0';
            e.dataTransfer.setData('text/plain', '');
            document.body.appendChild(draggedItem);
        }

        function dragEnd() {
            this.style.opacity = '1';
            draggedItem.remove();
        }

        function dragOver(e) {
            e.preventDefault();
        }

        function dragEnter(e) {
            e.preventDefault();
            this.classList.add('hovered');
        }

        function dragLeave() {
            if (this) {
                this.classList.remove('hovered');
            }
        }

        function drop(e) {
            e.preventDefault();
            this.classList.remove('hovered');
            if (draggedItem) {
                var clonedItem = draggedItem.cloneNode(true);
                this.appendChild(clonedItem);
            }
        }

        function clearCell() {
            if (this.innerHTML.trim() !== '') {
                this.innerHTML = '';
            }
        }

        function attachDragDropEvents() {
            const positions = document.querySelectorAll('.position');
            const repos = document.querySelectorAll('.repos');
            const cells = document.querySelectorAll('.droppable');
            const supplements = document.querySelectorAll('.supplement');

            positions.forEach(position => {
                position.addEventListener('dragstart', dragStart);
                position.addEventListener('dragend', dragEnd);
            });

            repos.forEach(repo => {
                repo.addEventListener('dragstart', dragStart);
                repo.addEventListener('dragend', dragEnd);
            });

            cells.forEach(cell => {
                cell.addEventListener('dragover', dragOver);
                cell.addEventListener('dragenter', dragEnter);
                cell.addEventListener('dragleave', dragLeave);
                cell.addEventListener('drop', drop);
                cell.addEventListener('click', clearCell);
            });

            supplements.forEach(supplement => {
                supplement.addEventListener('dragstart', dragStart);
                supplement.addEventListener('dragend', dragEnd);
            });
        }




        function initDraggableElements() {
            $(".element").draggable({
                containment: "parent",
                stop: function (event, ui) {
                    $(this).data("posX", ui.position.left);
                    $(this).data("posY", ui.position.top);
                },
            });
        }



        function updateServices() {
            // Récupération des services depuis le serveur
            fetch('/Emploi/GetServices')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        data.services.forEach(services => {
                            $('#serviceDropdown').append();
                        });
                    } else {
                        console.error(data.message);
                    }
                })
                .catch(error => {
                    console.error('Erreur réseau ou de conversion JSON:', error);
                });
        }

        function attachEventHandlers() {
            // Gestionnaire d'événements pour le changement de catégorie
            $('#categorieDropdown').change(updatePostesAndRepos);
        }

        // Ailleurs dans votre code...
        var categorieDropdown = document.getElementById("categorieDropdown");
        categorieDropdown.addEventListener('change', updatePostesAndRepos);

        function updatePostesAndRepos() {
            var CategorieId = document.getElementById("categorieDropdown").value;
            if (CategorieId) {
                fetch('/Emploi/GetPostesReposAndSupplementsByCategorie?CategorieId=' + CategorieId)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);

                        // Efface les sections de postes, de repos et de suppléments
                        var postesSection = document.getElementById("postesSection");
                        postesSection.innerHTML = '';

                        var reposSection = document.getElementById("reposSection");
                        reposSection.innerHTML = '';

                        var supplementsSection = document.getElementById("supplementsSection");
                        supplementsSection.innerHTML = '';

                        // Traite les données reçues
                        if (data.success) {
                            // Afficher les postes
                            if (data.postes && data.postes.length > 0) {
                                data.postes.forEach(poste => {
                                    // Créer un élément HTML pour chaque poste
                                    var posteDiv = document.createElement('div');
                                    posteDiv.className = "position";
                                    posteDiv.draggable = "true";
                                    posteDiv.id = poste.posteId;

                                    // Construire la chaîne de caractères pour afficher les valeurs
                                    var posteContent =
                                        `
                                        <div class="box holiday-box"> `
                                    posteContent += `
                                                                   <strong>${poste.postename}</strong><br />`
                                    if (poste.matin) {
                                        posteContent += ' Matin  ';
                                    }

                                    // Vérifier si ApresMidi est vrai, puis ajouter le champ "Après-midi" à la chaîne de caractères
                                    if (poste.apresMidi) {
                                        posteContent += ' Après-midi  ';
                                    }

                                    // Vérifier si GardeSoir est vrai, puis ajouter le champ "Garde Soir" à la chaîne de caractères
                                    if (poste.gardeSoir) {
                                        posteContent += ' Garde Soir';
                                    }
                                    posteContent += `<br />`;


                                    posteContent += `
                                    S1 :
                                    <span>${poste.seance1Debut} /</span>
                                    <span>${poste.seance1Fin}</span><br />
                                    `;

                                    // Vérifier si seance2Debut est vide, puis l'ajouter à la chaîne de caractères
                                    if (poste.seance2Debut) {
                                        posteContent += `<span>${poste.seance2Debut} /</span>`;
                                    }

                                    // Vérifier si seance2Fin est vide, puis l'ajouter à la chaîne de caractères
                                    if (poste.seance2Fin) {
                                        posteContent += `  S2 :<span>${poste.seance2Fin}</span>`;
                                    }


                                    // Fermer la balise div
                                    posteContent += `</div>`;

                                    // Ajouter le contenu à l'élément HTML
                                    posteDiv.innerHTML = posteContent;

                                    // Ajouter l'élément à la section des postes
                                    postesSection.appendChild(posteDiv);
                                });
                            }
                            // Afficher les repos
                            // Afficher les repos
                            if (data.repos && data.repos.length > 0) {
                                data.repos.forEach(repo => {
                                    // Créer un élément HTML pour chaque repos
                                    var repoDiv = document.createElement('div');
                                    repoDiv.className = "repos";
                                    repoDiv.draggable = "true";
                                    repoDiv.id = repo.reposId;

                                    // Vérifier si le champ date_Jours est présent
                                    var dateJoursContent = repo.date_Jours ? `<span> ${repo.date_Jours}</span>` : '';

                                    // Vérifier si le champ Date_Joursfin est présent

                                    // Ajouter les données dans l'élément HTML
                                    repoDiv.innerHTML = `
                            <div class="box repo-box">
                                <strong>${repo.reposName}</strong><br />
                                ${dateJoursContent}
                            </div>
                        `;

                                    // Ajouter l'élément à la section des repos
                                    reposSection.appendChild(repoDiv);
                                });
                            }

                            if (data.supplements && data.supplements.length > 0) {
                                data.supplements.forEach(supplement => {
                                    // Créer un élément HTML pour chaque supplément
                                    var supplementDiv = document.createElement('div');
                                    supplementDiv.className = "supplement";
                                    supplementDiv.draggable = "true";
                                    supplementDiv.id = supplement.supplementId;
                                    // Correction de la variable ici ↓
                                    supplementDiv.innerHTML = `
                            <div class="btn">
                                <strong>${supplement.nom}</strong>
                            </div>
                        `;
                                    supplementsSection.appendChild(supplementDiv);
                                });
                            } else {
                                console.error('Erreur lors de la récupération des données: ', data.message);
                            }

                        }
                    })
                    .catch(error => {
                        console.error('Erreur lors de la récupération des postes, repos et suppléments:', error);
                    });
            } else {
                // Efface les sections de postes, de repos et de suppléments si aucune catégorie n'est sélectionnée
                var postesSection = document.getElementById("postesSection");
                postesSection.innerHTML = '';

                var reposSection = document.getElementById("reposSection");
                reposSection.innerHTML = '';

                var supplementsSection = document.getElementById("supplementsSection");
                supplementsSection.innerHTML = '';
            }
            attachDragDropEvents();
        }


        function updateEmployees() {
            const serviceId = document.getElementById("serviceDropdown").value;

            if (serviceId) {
                fetch('/Emploi/GetEmployeesByService?ServiceId=' + serviceId)
                    .then(response => response.json())
                    .then(data => {
                        const tableBody = document.querySelector('#tableau tbody');
                        tableBody.innerHTML = '';

                        const days = document.getElementById("tableau").dataset.days.split(',');

                        if (typeof data === 'object' && data.employees) {
                            data.employees.forEach(employee => {
                                const employeeRow = document.createElement('tr');
                                employeeRow.id = employee.employeeId;

                                const employeeNameCell = document.createElement('td');
                                employeeNameCell.textContent = employee.name;
                                employeeRow.appendChild(employeeNameCell);

                                days.forEach(day => {
                                    const dayCell = document.createElement('td');
                                    dayCell.className = "droppable";
                                    dayCell.dataset.day = day;
                                    employeeRow.appendChild(dayCell);
                                });

                                const totalHoursCell = document.createElement('td');
                                totalHoursCell.className = "TotalHours-column";
                                totalHoursCell.textContent = employee.totalWeeklyHours;
                                employeeRow.appendChild(totalHoursCell);

                                tableBody.appendChild(employeeRow);
                            });
                        } else {
                            console.error('Erreur: Les données ne sont pas dans le format attendu.');
                        }

                        attachDragDropEvents();
                    })
                    .catch(error => {
                        console.error('Erreur lors de la récupération des employés:', error);
                    });
            } else {
                document.querySelector('#tableau tbody').innerHTML = '';
            }
        }
        function getTableData() {
            var emploiData = [];
            $("#tableau tbody tr").each(function () {
                var employeeId = $(this).attr("id");
                var name = $(this).closest("tr").find(".employee-column").text().trim();

                $(this).find("td.droppable").each(function (index, cell) {
                    var dayName = $(this).data("day");

                    var posteId = $(cell).find(".position").attr("id") || "";
                    var reposId = $(cell).find(".repos").attr("id") || "";
                    var supplementId = $(cell).find(".supplement").attr("id") || "";

                    var dailyEmployment = {
                        EmployeeId: employeeId,
                        EmployeName: name,
                        DayName: dayName,
                        PosteId: posteId,
                        ReposId: reposId,
                        SupplementId: supplementId
                    };

                    emploiData.push(dailyEmployment);
                });
            });
            return emploiData;
        }


        $("#emploi-form").submit(function (event) {
        event.preventDefault(); // Empêche la soumission du formulaire par défaut

        // Récupérer les données du tableau
        var emploiData = getTableData();

        // Construction de l'objet à envoyer au serveur
        var dataToSend = {
            ServiceSelected: $("#serviceDropdown").val(),
            DateSelected: $("#date").val(),
            CategorieSelected: $("#categorieDropdown").val(),
            EmploiData: emploiData
        };

        console.log("Données d'emploi à envoyer au serveur :", dataToSend); // Affiche les données à envoyer dans la console

        // Envoi des données au serveur via $.post()
        $.ajax({
            url: '@Url.Action("EnregistrerEmploi", "Emploi")',
            type: 'POST',
            contentType: 'application/json', // Spécifie le type de contenu comme JSON
            data: JSON.stringify(dataToSend), // Convertit les données en JSON
            success: function (result) {
                console.log("Résultat :", result);
                // Gérer le résultat si nécessaire
                alert(result.message); // Affichez un message d'alerte avec le message reçu du serveur
            },
            error: function (xhr, status, error) {
                console.error("Erreur lors de l'envoi des données :", error);
                alert("Erreur lors de l'envoi des données. Consultez la console pour plus de détails.");
                // Gérer l'erreur si nécessaire
            }
        });
        });


    </script>
</body>
</html>




@*            <div id="modal" class="modal">

        <div class="modal-content">
            <div>
                <span class="close" onclick="closeModal('model')">&times;</span>
            </div>
            <div class="row">
                <div class="col-6">
                    <input type="text" class="boxx" id="nom" placeholder="Nom">
                </div>
                <div class="col-6">
                    <input type="number" class="boxx" id="matricule" placeholder="Matricule">
                </div>
            </div>
            <div class="row">
                <div class="col-4">
                    <strong>start</strong>
                    <input type="time" class="boxx" id="heureDebut" placeholder="Heure de début">
                </div>
                <div class="col-4">
                    <strong>fin</strong>
                    <input type="time" class="boxx" id="heureFin" placeholder="Heure de fin">
                </div>
                <div class="col-4">
                    <input type="date" class="boxx" id="dateJour" placeholder="Date du jour">
                </div>
            </div>
            <div class="row">
                <div class="col-12 center">
                    <button class="btn" id="valider"> Valider </button>
                </div>
            </div>
        </div>
    </div> *@