@model Clinic.Models.EmploiViewModel

<input type="hidden" id="serviceId" value="@ViewBag.ServiceId" />

<h1>Approve Registration Requests</h1>

<table class="table">
    <thead>
        <tr>
            <th>Employee ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Total Weekly Hours</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody id="employeeTableBody">
        <!-- Employee rows will be inserted here by JavaScript -->
    </tbody>
</table>

<p id="noRequestsMessage" style="display: none;">No registration requests to approve.</p>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var serviceId = sessionStorage.getItem("serviceId");
        console.log("Service ID:", serviceId);

        fetch(`/Account/GetUnapprovedEmployees?serviceId=${serviceId}`)
            .then(response => {
                console.log("Response:", response); // Log de la réponse
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                var tbody = document.getElementById("employeeTableBody");
                var noRequestsMessage = document.getElementById("noRequestsMessage");

                // Clear any existing rows in the tbody
                tbody.innerHTML = '';

                if (data.length > 0) {
                    noRequestsMessage.style.display = "none";
                    data.forEach(employee => {
                        var row = document.createElement("tr");

                        var cellId = document.createElement("td");
                        cellId.textContent = employee.employeeId;

                        var cellName = document.createElement("td");
                        cellName.textContent = employee.employeeName;

                        var cellEmail = document.createElement("td");
                        cellEmail.textContent = employee.email; // Afficher l'email

                        var cellTotalHours = document.createElement("td");
                        var totalHoursInput = document.createElement("input");
                        totalHoursInput.type = "number";
                        totalHoursInput.min = "0";
                        totalHoursInput.step = "1";
                        totalHoursInput.placeholder = "Enter total weekly hours";
                        cellTotalHours.appendChild(totalHoursInput);

                        var cellAction = document.createElement("td");

                        var approveButton = document.createElement("button");
                        approveButton.textContent = "Approve";
                        approveButton.className = "btn btn-success";
                        approveButton.addEventListener("click", function () {
                            var totalHours = totalHoursInput.value;
                            approveEmployee(employee.employeeId, totalHours); // Appeler la fonction pour approuver l'employé
                        });

                        cellAction.appendChild(approveButton);

                        row.appendChild(cellId);
                        row.appendChild(cellName);
                        row.appendChild(cellEmail); // Ajouter la cellule email à la ligne
                        row.appendChild(cellTotalHours);
                        row.appendChild(cellAction);

                        tbody.appendChild(row);
                    });

                } else {
                    noRequestsMessage.style.display = "block";
                }
            })
            .catch(error => {
                console.error("Error fetching unapproved employees:", error);
            });
    });

    function approveEmployee(employeeId, totalHours) {
        const data = {
            employeeId: employeeId,
            totalHours: totalHours
        };

        fetch(`/Account/ApproveEmployee`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log(data); // Afficher la réponse dans la console
            })
            .catch(error => {
                console.error("Error approving employee:", error);
            });
    }

</script>
